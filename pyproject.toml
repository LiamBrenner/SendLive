[tool.poetry]
name = "sendlive"
version = "0.0.3"
description = "sendlive"
authors = ["Liam Brenner <liam.brenner@gmail.com>"]
license = "GPL-3.0"
readme = "README.md"
homepage = "https://github.com/LiamBrenner/sendlive"
repository = "https://github.com/LiamBrenner/sendlive"
documentation = "https://sendlive.readthedocs.io"
classifiers = ["Development Status :: 1 - Planning"]

[tool.poetry.urls]
Changelog = "https://github.com/LiamBrenner/sendlive/releases"

[tool.poetry.dependencies]
python = "^3.9"
click = ">=8.1.7"
boto3 = { version = ">=1.34.0", optional = true }
google-cloud-video-live-stream = { version = ">=1.6.0", optional = true }
urllib3 = ">=1.26.18,<2.0"
pydantic = ">=2.5.2"

[tool.poetry.dev-dependencies]
moto = { extras = [
    "medialive",
    "mediapackage",
    "mediaconnect",
    "ivs",
], version = ">=4.2.11" }
Pygments = ">=2.17.2"
ruff = ">=0.1.8"
boto3-stubs = { version = ">=1.34.2", extras = [
    "essential",
    "cloudfront",
    "cloudwatch",
    "ec2",
    "events",
    "iam",
    "ivs",
    "ivs-realtime",
    "ivschat",
    "logs",
    "mediaconnect",
    "mediaconvert",
    "medialive",
    "mediapackage",
    "mediapackage-vod",
    "mediastore",
    "mediastore-data",
    "mediatailor",
    "s3",
    "secretsmanager",
    "ssm",
    "sts",
] }
coverage = { extras = ["toml"], version = ">=7.3.3" }
furo = ">=2023.9.10"
mypy = ">=1.7.1"
pre-commit = ">=3.6.0"
pre-commit-hooks = ">=4.5.0"
pytest = ">=7.4.3"
safety = ">=2.3.5"
sphinx = ">=7.2.6"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=5.1.0"
typeguard = ">=4.1.5"
xdoctest = { extras = ["colors"], version = ">=1.1.2" }
myst-parser = { version = ">=2.0.0" }
typing-extensions = ">=4.9.0"

[tool.poetry.extras]
aws = ["boto3"]
gcp = ["google-cloud-video-live-stream"]

[tool.poetry.scripts]
sendlive = "sendlive.__main__:main"


[tool.coverage.paths]
source = ["sendlive", "*/sendlive"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["sendlive", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
plugins = ["pydantic.mypy"]

[tool.ruff]
target-version = "py311"
select = ["E4", "E7", "E9", "F", "B", "N", "D", "S", "I", "UP", "PL"]
ignore = ["D100", "UP007"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


# per https://github.com/astral-sh/ruff/issues/4368#issue-1705468153
[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG",  # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT",  # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
]


# [flake8]
# select = B,B9,C,D,DAR,E,F,N,RST,S,W
# ignore = E203,E501,RST201,RST203,RST301,W503
# max-line-length = 80
# max-complexity = 10
# docstring-convention = google
# per-file-ignores = tests/*:S101
# rst-roles = class,const,func,meth,mod,ref
# rst-directives = deprecated
